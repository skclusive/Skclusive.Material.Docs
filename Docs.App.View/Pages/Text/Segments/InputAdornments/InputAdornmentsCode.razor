@namespace Skclusive.Material.Docs.App.View
@inherits MaterialComponentBase

<MarkdownCode
    Class="@_Class"
    Style="@_Style"
    Text="@(@"
```html
<div
    style=""display: flex; flex-wrap: wrap;"">
    <TextField
        Label=""With normal TextField""
        Id=""simple-start-adornment""
        @bind-Value=""@Name""
        Style=""margin: 8px; flex-basis: 200px;"">
        <StartAdornment>
             <InputAdornment
                Adornment=""Kg""
                Position=""@InputPosition.Start"" />
        </StartAdornment>
    </TextField>
    <FormControl
        FullWidth
        HasStartAdornment=""true""
        Style=""margin: 8px;"">
        <InputLabel
            For=""adornment-amount"">
            Amount
        </InputLabel>
        <TextInput
            Id=""adornment-amount""
            @bind-Value=""@Amount"">
            <StartAdornment>
                <InputAdornment
                    Adornment=""$""
                    Position=""@InputPosition.Start"" />
            </StartAdornment>
        </TextInput>
    </FormControl>
    <FormControl
        Style=""margin: 8px; margin-top: 24px; flex-basis: 200px;"">
        <TextInput
            Id=""adornment-weight""
            @bind-Value=""@Weight""
            aria-describedby=""weight-helper-text"">
            <EndAdornment>
                <InputAdornment
                    Adornment=""Kg""
                    Position=""@InputPosition.End"" />
            </EndAdornment>
        </TextInput>
        <FormHelperText
            Id=""weight-helper-text"">
            Weight
        </FormHelperText>
    </FormControl>
    <FormControl
        Style=""margin: 8px; flex-basis: 200px;"">
        <InputLabel
            For=""adornment-password"">
            Password
        </InputLabel>
        <TextInput
            Id=""adornment-password""
            Type=""@(ShowPassword ? ""text"" : ""password"")""
            @bind-Value=""@Password"">
            <EndAdornment>
                <InputAdornment
                    Position=""@InputPosition.End""
                    Context=""AdornmentContext"">
                    <IconButton
                        aria-label=""toggle password visibility""
                        OnClick=""@HandleClickShowPassword""
                        OnMouseDown=""@HandleMouseDownPassword"">
                        @if (ShowPassword)
                        {
                            <VisibilityIcon />
                        }
                        else
                        {
                             <VisibilityOffIcon />
                        }
                    </IconButton>
                </InputAdornment>
            </EndAdornment>
        </TextInput>
    </FormControl>
</div>
```

```csharp
@code
{
    private string Name { set; get; }

    private string Amount { set; get; }

    private string Weight { set; get; }

    private string Password { set; get; }

    private bool ShowPassword { set; get; }


    private void HandleClickShowPassword(EventArgs args)
    {
        ShowPassword = !ShowPassword;

        StateHasChanged();
    }

    private void HandleMouseDownPassword(EventArgs args)
    {
    }
}
```
")" />