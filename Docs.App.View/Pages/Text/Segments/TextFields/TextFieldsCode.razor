@namespace Skclusive.Material.Docs.App.View
@inherits MaterialComponentBase

<MarkdownCode
    Class="@_Class"
    Style="@_Style"
    Text="@(@"
```html
<form
    style=""display: flex;
    flex-wrap: wrap;""
    noValidate
    autocomplete=""off"">
    <TextField
        Id=""standard-name""
        Label=""Name""
        Class=""demo-text-field""
        Value=""@Name""
        OnChange=""@HandleNameChange""
        Margin=""@Margin.Normal"" />
    <TextField
        Id=""standard-uncontrolled""
        Label=""Uncontrolled""
        DefaultValue=""foo""
        Class=""demo-text-field""
        Margin=""@Margin.Normal"" />
    <TextField
        Required=""true""
        Id=""standard-required""
        Label=""Required""
        DefaultValue=""Hello World""
        Class=""demo-text-field""
        Margin=""@Margin.Normal"" />
    <TextField
        Error=""true""
        Id=""standard-error""
        Label=""Error""
        DefaultValue=""Hello World""
        Class=""demo-text-field""
        Margin=""@Margin.Normal"" />
    <TextField
        Disabled=""true""
        Id=""standard-disabled""
        Label=""Disabled""
        DefaultValue=""Hello World""
        Class=""demo-text-field""
        Margin=""@Margin.Normal"" />
    <TextField
        Id=""standard-password-input""
        Label=""Password""
        Class=""demo-text-field""
        Type=""password""
        AutoComplete=""current-password""
        Margin=""@Margin.Normal"" />
    <TextField
        Id=""standard-read-only-input""
        Label=""Read Only""
        DefaultValue=""Hello World""
        Class=""demo-text-field""
        Margin=""@Margin.Normal""
        ReadOnly=""true"" />
    <TextField
        Id=""standard-dense""
        Label=""Dense""
        Class=""demo-text-field""
        Style=""margin-top: 19px;""
        Margin=""@Margin.Dense"" />
    <TextField
        Id=""standard-multiline-flexible""
        Label=""Multiline""
        Multiline
        RowsMax=""4""
        Value=""@Multiline""
        OnChange=""@HandleMultilineChange""
        Class=""demo-text-field""
        Margin=""@Margin.Normal"" />
    <TextField
        Id=""standard-multiline-static""
        Label=""Multiline""
        Multiline
        Rows=""4""
        DefaultValue=""Default Value""
        Class=""demo-text-field""
        Margin=""@Margin.Normal"" />
    <TextField
        Id=""standard-helperText""
        Label=""Helper text""
        DefaultValue=""Default Value""
        Class=""demo-text-field""
        Helper=""Some important text""
        Margin=""@Margin.Normal"" />
    <TextField
        Id=""standard-with-placeholder""
        Label=""With placeholder""
        Placeholder=""Placeholder""
        Class=""demo-text-field""
        Margin=""@Margin.Normal"" />
    <TextField
        Id=""standard-textarea""
        Label=""With placeholder multiline""
        Placeholder=""Placeholder""
        Multiline
        Class=""demo-text-field""
        Margin=""@Margin.Normal"" />
    <TextField
        Id=""standard-number""
        Label=""Number""
        Value=""@Age?.ToString()""
        OnChange=""@HandleAgeChange""
        Type=""number""
        Class=""demo-text-field""
        Margin=""@Margin.Normal"" />
        @* InputLabelProps={{ shrink: true }} *@
    <TextField
        Id=""standard-search""
        Label=""Search field""
        Type=""search""
        Class=""demo-text-field""
        Margin=""@Margin.Normal"" />
    <TextField
        Id=""standard-full-width""
        Label=""Label""
        Style=""margin: 8px;""
        Placeholder=""Placeholder""
        Helper=""Full width!""
        FullWidth
        Shrink
        Margin=""@Margin.Normal"" />
    <TextField
        Id=""standard-bare""
        Class=""demo-text-field""
        DefaultValue=""Bare""
        Margin=""@Margin.Normal"" />
        @* inputProps={{ 'aria-label': 'bare' }} *@
</form>
```

```csharp
@code
{
    private string Name { set; get; } = ""Cat in the Hat"";

    private string Multiline { set; get; } = ""Controlled"";

    private int? Age { set; get; }

    private void HandleNameChange(ChangeEventArgs args)
    {
        Name = args.Value?.ToString();

        StateHasChanged();
    }

    private void HandleMultilineChange(ChangeEventArgs args)
    {
        Multiline = args.Value?.ToString();

        StateHasChanged();
    }

    private void HandleAgeChange(ChangeEventArgs args)
    {
        if (int.TryParse(args.Value?.ToString(), out int age))
        {
            Age = age;

            StateHasChanged();
        }
    }
}
```
")" />