@namespace Skclusive.Material.Docs.App.View
@inherits MaterialComponentBase

<MarkdownCode
    Class="@_Class"
    Style="@_Style"
    Text="@(@"
```html
<div>
    <Button
        OnClick=""@HandleOpen"">
        Transition Group
    </Button>
    <Modal
        aria-labelledby=""transition-modal-title""
        aria-describedby=""transition-modal-description""
        Open=""@Open""
        Style=""display: flex;
        align-items: center;
        justify-content: center;""
        OnClose=""@HandleClose""
        OnBackdropClick=""@OnBackdropClick""
        OnEscapeKeyDown=""@OnEscapeKeyDown"">
        <BackdropContent>
            <Backdrop
                Open=""@context.Open""
                OnClick=""@context.OnBackdropClick""/>
        </BackdropContent>
        <ChildContent>
            <Fade
                In=""@Open""
                Context=""FadeContext"">
                <div
                    @ref=""@FadeContext.RefBack.Current""
                    style=""@(CssUtil.ToStyle(FadeContext.Styles, @""border: 2px solid #000;
                    padding: 16px 32px 24px;
                    box-shadow: 0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12);
                    background-color: var(--theme-palette-background-paper);""))"">
                    <h2
                        style=""margin-block-start: 0.83em;
                        margin-block-end: 0.83em;
                        margin-inline-start: 0px;
                        margin-inline-end: 0px;""
                        id=""transition-modal-title"">
                        Transition modal
                    </h2>
                    <p
                        style=""margin-block-start: 1em;
                        margin-block-end: 1em;
                        margin-inline-start: 0px;
                        margin-inline-end: 0px;""
                        id=""transition-modal-description"">
                        transition-group animates me.
                    </p>
                </div>
            </Fade>
        </ChildContent>
    </Modal>
</div>
```

```csharp
@code
{
    private bool Open { set; get; }

    private void OnBackdropClick()
    {
        Open = false;

        StateHasChanged();
    }

    private void OnEscapeKeyDown()
    {
        Open = false;

        StateHasChanged();
    }

    private void HandleOpen()
    {
        Open = true;

        StateHasChanged();
    }

    private void HandleClose(ModalCloseReason reason)
    {
        Open = false;

        StateHasChanged();
    }
}
```
")" />