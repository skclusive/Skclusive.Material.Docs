@namespace Skclusive.Material.Docs.App.View

<MarkdownSegment
    Text="@(@"
# Link API

<p class=""description"">The API documentation of the Link component. Learn more about the parameters and the CSS customization points.</p>

## Parameters

## Parameters

| Name | Type | Default | Description |
|:-----|:-----|:--------|:------------|
| <span class=""prop-name"">RootRef</span> | <span class=""prop-type"">IReference</span> | <span class=""prop-default"">new Reference()</span> | The reference used to ref the root node. |
| <span class=""prop-name"">Class</span> | <span class=""prop-type"">string</span> | | The class applied to the root node. |
| <span class=""prop-name"">Style</span> | <span class=""prop-type"">string</span> | | The style applied to the root node. |
| <span class=""prop-name"">Component</span> | <span class=""prop-type"">string</span> | | The component used for the root node. |
| <span class=""prop-name"">Href</span> | <span class=""prop-type"">string</span> | | Href for the Link. |
| <span class=""prop-name"">Underline</span> | <span class=""prop-type"">Underline.None<br>&#124;&nbsp;Underline.Hover<br>&#124;&nbsp;Underline.Always</span> | <span class=""prop-default"">Underline.Hover</span> | Controls when the link should have an underline. |
| <span class=""prop-name"">ChildContent</span> | <span class=""prop-type"">RenderFragment</span> |  | The badge will be added relative to this node. |
| <span class=""prop-name"">Align</span> | <span class=""prop-type"">Align.Inherit<br>&#124;&nbsp;Align.Left<br>&#124;&nbsp;Align.Center<br>&#124;&nbsp;Align.Right<br>&#124;&nbsp;Align.Justify</span> | <span class=""prop-default"">Align.Inherit</span> | Set the text-align on the component. |
| <span class=""prop-name"">Color</span> | <span class=""prop-type"">Color.Initial<br>&#124;&nbsp;Color.Inherit<br>&#124;&nbsp;Color.Primary<br>&#124;&nbsp;Color.Secondary<br>&#124;&nbsp;Color.TextPrimary<br>&#124;&nbsp;Color.TextSecondary<br>&#124;&nbsp;Color.Error</span> | <span class=""prop-default"">Color.Initial</span> | The color of the component. It supports those theme colors that make sense for this component. |
| <span class=""prop-name"">Display</span> | <span class=""prop-type"">Display.Initial<br>&#124;&nbsp;Display.Block<br>&#124;&nbsp;Display.Inline</span> | <span class=""prop-default"">Display.Initial</span> | Controls the display type. |
| <span class=""prop-name"">GutterBottom</span> | <span class=""prop-type"">bool</span> | <span class=""prop-default"">false</span> | If `true`, the text will have a bottom margin. |
| <span class=""prop-name"">NoWrap</span> | <span class=""prop-type"">bool</span> | <span class=""prop-default"">false</span> | If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.<br>Note that text overflow can only happen with block or inline-block level elements (the element needs to have a width in order to overflow). |
| <span class=""prop-name"">Paragraph</span> | <span class=""prop-type"">bool</span> | <span class=""prop-default"">false</span> | If `true`, the text will have a bottom margin. |
| <span class=""prop-name"">Variant</span> | <span class=""prop-type"">LinkVariant.H1<br>&#124;&nbsp;LinkVariant.H2<br>&#124;&nbsp;LinkVariant.H3<br>&#124;&nbsp;LinkVariant.H4<br>&#124;&nbsp;LinkVariant.H5<br>&#124;&nbsp;LinkVariant.H6<br>&#124;&nbsp;LinkVariant.Subtitle1<br>&#124;&nbsp;LinkVariant.Subtitle2<br>&#124;&nbsp;LinkVariant.Body1<br>&#124;&nbsp;LinkVariant.Body2<br>&#124;&nbsp;LinkVariant.Caption<br>&#124;&nbsp;LinkVariant.Button<br>&#124;&nbsp;LinkVariant.Overline<br>&#124;&nbsp;LinkVariant.SrOnly<br>&#124;&nbsp;LinkVariant.Inherit</span> | <span class=""prop-default"">LinkVariant.Inherit</span> | Applies the theme typography styles. |


## CSS

- Style name: `Link`.
- Style details:

| Global class | Description |
|:-------------|:------------|
| <span class=""prop-name"">.Link-Root</span> | Styles applied to the root element.
| <span class=""prop-name"">.Link-Underline-None</span> | Styles applied to the root element if `Underline=""@Underline.None""`.
| <span class=""prop-name"">.Link-Underline-Hover</span> | Styles applied to the root element if `Underline=""@Underline.Hover""`.
| <span class=""prop-name"">.Link-Underline-Always</span> | Styles applied to the root element if `Underline=""@Underline.Always""`.
| <span class=""prop-name"">.Link-Button</span> | Styles applied to the root element if `Component=""button""`.
| <span class=""prop-name"">.Link-FocusVisible</span> | Pseudo-class applied to the root element if the link is keyboard focused.

")" />
