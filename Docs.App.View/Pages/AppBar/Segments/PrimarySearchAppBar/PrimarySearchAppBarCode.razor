@namespace Skclusive.Material.Docs.App.View
@inherits MaterialComponentBase

<MarkdownCode
    Class="@_Class"
    Style="@_Style"
    Text="@(@"
```css
<style>
    .primary-searchbar-search {
        width: 100%;
        position: relative;
        margin-left: 0;
        margin-right: 16px;
        border-radius: 4px;
        background-color: rgba(255, 255, 255, 0.15);
    }
    .primary-searchbar-search:hover {
        background-color: rgba(255, 255, 255, 0.25);
    }
    @media (min-width:600px) {
        .primary-searchbar-search {
            width: auto;
            margin-left: 24px;
        }
    }
    .primary-searchbar-search-icon {
        width: 56px;
        height: 100%;
        display: flex;
        position: absolute;
        align-items: center;
        pointer-events: none;
        justify-content: center;
    }
    .primary-searchbar-search-input {
        width: 100%;
        padding: 8px 8px 8px 56px;
        transition: width 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
    }
    @media (min-width:960px) {
        .primary-searchbar-search-input {
            width: 200px;
        }
    }
</style>
```
```html
<div
    style=""flex-grow: 1;"">
    <AppBar
        Position=""@AppBarPosition.Static"">
        <Toolbar>
            <IconButton
                Edge=""@IconButtonEdge.Start""
                Style=""margin-right: 16px;""
                Color=""@Color.Inherit""
                aria-label=""open drawer"">
                <MenuIcon />
            </IconButton>
            <Hidden
                ExtraSmallDown>
                <Typography
                    Class=""@context.Class""
                    Variant=""@TypographyVariant.H6""
                    NoWrap>
                    Material-UI
                </Typography>
            </Hidden>
            <div
                class=""primary-searchbar-search"">
                <div
                    class=""primary-searchbar-search-icon"">
                    <SearchIcon />
                </div>
                <InputBase
                    Placeholder=""Searchâ€¦""
                    Style=""color: inherit;""
                    InputClass=""primary-searchbar-search-input"" />
            </div>
            <div
                Style=""flex-grow: 1;"" />
            <Hidden
                SmallDown
                Context=""HiddenContext"">
                <div class=""@HiddenContext.Class"">
                    <div
                        style=""display: flex;"">
                        <IconButton
                            aria-label=""show 4 new mails""
                            Color=""@Color.Inherit"">
                            <Badge
                                BadgeText=""4""
                                Color=""@Color.Secondary"">
                                <MailIcon />
                            </Badge>
                        </IconButton>
                        <IconButton
                            aria-label=""show 17 new notifications""
                            Color=""@Color.Inherit"">
                            <Badge
                                BadgeText=""17""
                                Color=""@Color.Secondary"">
                                <NotificationsIcon />
                            </Badge>
                        </IconButton>
                        <IconButton
                            Edge=""@IconButtonEdge.End""
                            aria-label=""account of current user""
                            aria-controls=""primary-search-account-menu""
                            aria-haspopup=""true""
                            RootRef=""@ProfileMenuRef""
                            OnClick=""@HandleMenuOpen""
                            Color=""@Color.Inherit"">
                            <AccountCircleIcon />
                        </IconButton>
                    </div>
                </div>
            </Hidden>
            <Hidden
                MediumUp
                Context=""HiddenContext"">
                <div class=""@HiddenContext.Class"">
                    <div
                        style=""display: flex;"">
                        <IconButton
                            aria-label=""show more""
                            aria-controls=""primary-search-account-menu-mobile""
                            aria-haspopup=""true""
                            RootRef=""@MobileMenuRef""
                            OnClick=""@HandleMobileMenuOpen""
                            Color=""@Color.Inherit"">
                            <MoreVertIcon />
                        </IconButton>
                    </div>
                </div>
            </Hidden>
        </Toolbar>
    </AppBar>
    <Menu
        AnchorVerticalOrigin=""@VerticalOrigin.Top""
        AnchorHorizontalOrigin=""@HorizontalOrigin.Right""
        TransformVerticalOrigin=""@VerticalOrigin.Top""
        TransformHorizontalOrigin=""@HorizontalOrigin.Right""
        Open=""@IsMobileMenuOpen""
        KeepMounted
        AnchorRef=""@MobileMenuRef""
        Id=""primary-search-account-menu-mobile""
        OnClose=""@HandleMobileMenuClose"">
        <MenuItem>
            <IconButton
                aria-label=""show 4 new mails""
                Color=""@Color.Inherit"">
                <Badge
                    BadgeText=""4""
                    Color=""@Color.Secondary"">
                    <MailIcon />
                </Badge>
            </IconButton>
            <p>Messages</p>
        </MenuItem>
        <MenuItem>
            <IconButton
                aria-label=""show 17 new notifications""
                Color=""@Color.Inherit"">
                <Badge
                    BadgeText=""17""
                    Color=""@Color.Secondary"">
                    <NotificationsIcon />
                </Badge>
            </IconButton>
            <p>Notifications</p>
        </MenuItem>
        <MenuItem
            OnClick=""@HandleMenuOpen"">
            <IconButton
                Edge=""@IconButtonEdge.End""
                aria-label=""account of current user""
                aria-controls=""primary-search-account-menu""
                aria-haspopup=""true""
                RootRef=""@MobileProfileMenuRef""
                Color=""@Color.Inherit"">
                <AccountCircleIcon />
            </IconButton>
            <p>Profile</p>
        </MenuItem>
    </Menu>
    <Menu
        AnchorVerticalOrigin=""@VerticalOrigin.Top""
        AnchorHorizontalOrigin=""@HorizontalOrigin.Right""
        TransformVerticalOrigin=""@VerticalOrigin.Top""
        TransformHorizontalOrigin=""@HorizontalOrigin.Right""
        Open=""@IsMenuOpen""
        KeepMounted
        AnchorRef=""@MenuRef""
        Id=""primary-search-account-menu""
        OnClose=""@HandleMenuClose"">
        <MenuItem
            OnClick=""@HandleMenuClose"">
            Profile
        </MenuItem>
        <MenuItem
            OnClick=""@HandleMenuClose"">
            My account
        </MenuItem>
    </Menu>
</div>
```
```csharp
@code
{
    private IReference ProfileMenuRef { set; get; } = new Reference();

    private IReference MobileProfileMenuRef { set; get; } = new Reference();

    private IReference MenuRef => IsMobileMenuOpen ? MobileProfileMenuRef : ProfileMenuRef;

    private IReference MobileMenuRef { set; get; } = new Reference();

    private bool IsMenuOpen { set; get; }

    private bool IsMobileMenuOpen { set; get; }

    private void HandleMenuOpen()
    {
        IsMenuOpen = true;

        StateHasChanged();
    }
    private void HandleMenuClose()
    {
        IsMenuOpen = false;

        IsMobileMenuOpen = false;

        StateHasChanged();
    }

    private void HandleMenuClose(MenuCloseReason reason)
    {
        IsMenuOpen = false;

        IsMobileMenuOpen = false;

        StateHasChanged();
    }

    private void HandleMobileMenuOpen()
    {
        IsMobileMenuOpen = true;

        StateHasChanged();
    }

    private void HandleMobileMenuClose()
    {
        IsMobileMenuOpen = false;

        IsMenuOpen = false;

        StateHasChanged();
    }

    private void HandleMobileMenuClose(MenuCloseReason reason)
    {
        IsMobileMenuOpen = false;

        IsMenuOpen = false;

        StateHasChanged();
    }
}
```
")" />