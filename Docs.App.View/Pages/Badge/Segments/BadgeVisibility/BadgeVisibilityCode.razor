@namespace Skclusive.Material.Docs.App.View
@inherits MaterialComponentBase

<MarkdownCode
    Class="@_Class"
    Style="@_Style"
    Text="@(@"
```css
<style>
    .demo-root {
        width: 100%;
        display: flex;
        align-items: center;
        flex-direction: column;
    }
    .demo-margin {
        margin: calc(var(--theme-spacing) * 1px);
    }
    .demo-divider {
        width: 100%;
        margin: 16px 0px;
    }
    .demo-row {
        margin-top: 16px;
    }
</style>
```

```html
<div
    class=""demo-root"">
    <div
        class=""demo-row"">
        <Badge
            Color=""@Color.Secondary""
            BadgeText=""4""
            Invisible=""@Invisible""
            Class=""demo-margin"">
            <MailIcon />
        </Badge>
        <Badge
            Color=""@Color.Secondary""
            Variant=""@BadgeVariant.Dot""
            Invisible=""@Invisible""
            Class=""demo-margin"">
            <MailIcon />
        </Badge>
    </div>
    <FormGroup Row>
        <FormControlLabel
            Label=""Show Badge"">
            <Switch
                Color=""@Color.Primary""
                Checked=""@(!Invisible)""
                OnChange=""@OnVisibleChange"" />
        </FormControlLabel>
    </FormGroup>
    <Divider
        Class=""demo-divider"" />
    <div
        class=""demo-row"">
        <Badge
            Color=""@Color.Secondary""
            BadgeText=""0""
            Class=""demo-margin"">
            <MailIcon />
        </Badge>
        <Badge
            Color=""@Color.Secondary""
            BadgeText=""0""
            ShowZero
            Class=""demo-margin"">
            <MailIcon />
        </Badge>
    </div>
</div>
```

```csharp
@code
{
    private bool Invisible { set; get; } = false;

    void OnVisibleChange(EventArgs args)
    {
        Invisible = !Invisible;

        StateHasChanged();
    }
}
```
")" />