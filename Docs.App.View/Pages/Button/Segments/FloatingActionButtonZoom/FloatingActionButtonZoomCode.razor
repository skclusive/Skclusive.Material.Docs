@namespace Skclusive.Material.Docs.App.View
@inherits MaterialComponentBase

<MarkdownCode
    Class="@_Class"
    Style="@_Style"
    Text="@(@"
```css
<style>
    .demo-floating-action-root {
        width: 500px;
        position: relative;
        min-height: 200px;
        background-color: var(--theme-palette-background-paper);
    }
    .demo-fab-button {
        right: 16px;
        bottom: 16px;
        position: absolute;
    }
    .demo-fab-button-green {
        color: #fff;
        background-color: #4caf50;
    }
    .demo-fab-button-green:hover {
        background-color: #43a047;
    }
</style>
```

```html
<div
    class=""demo-floating-action-root"">
    <AppBar
        Position=""@AppBarPosition.Static""
        Color=""@Color.Default"">
        <Tabs
            Value=""@Value""
            OnChange=""@HandleChange""
            IndicatorColor=""@Color.Primary""
            TextColor=""@Color.Primary""
            Variant=""@TabsVariant.FullWidth""
            aria-label=""floating action tabs example"">
            <Tab
                Id=""floating-action-tab""
                Control=""floating-action-tabpanel""
                Label=""Item One""
                Value=""0"" />
            <Tab
                Id=""floating-action-tab""
                Control=""floating-action-tabpanel""
                Label=""Item Two""
                Value=""1"" />
            <Tab
                Id=""floating-action-tab""
                Control=""floating-action-tabpanel""
                Label=""Item Three""
                Value=""2"" />
        </Tabs>
    </AppBar>
    <TabPanel
        Id=""floating-action-tabpanel""
        Label=""floating-action-tab""
        Value=""@Value""
        Index=""0"">
        Item One
    </TabPanel>
    <TabPanel
        Id=""floating-action-tabpanel""
        Label=""floating-action-tab""
        Value=""@Value""
        Index=""1"">
        Item Two
    </TabPanel>
    <TabPanel
        Id=""floating-action-tabpanel""
        Label=""floating-action-tab""
        Value=""@Value""
        Index=""2"">
        Item Three
    </TabPanel>
    @foreach(var fab in Fabs)
    {
        <Fade
            @key=""@fab.index""
            In=""@(object.Equals(Value, fab.index))""
            UnmountOnExit
            Context=""FadeContext"">
            <Fab
                RootRef=""@FadeContext.RefBack""
                Style=""@(CssUtil.ToStyle(FadeContext.Styles, $""transition-delay: {(object.Equals(Value, fab.index) ? 195 : 0)}ms;""))""
                aria-label=""@fab.label""
                Class=""@fab.clazz""
                Color=""@fab.color"">
                @fab.icon
            </Fab>
        </Fade>
    }
</div>
```

```csharp
@code
{
    private object Value { set; get; } = 0;

    private void HandleChange(object value)
    {
        Value = value;

        StateHasChanged();
    }

    private (int index, Color color, string clazz, RenderFragment icon, string label)[] Fabs =
    {
        (
            index: 0,
            color: Color.Primary,
            clazz: ""demo-fab-button"",
            icon: @<AddIcon />,
            label: ""Add""
        ),
        (
            index: 1,
            color: Color.Secondary,
            clazz:  ""demo-fab-button"",
            icon: @<EditIcon />,
            label: ""Edit""
        ),
        (
            index: 2,
            color: Color.Inherit,
            clazz: ""demo-fab-button demo-fab-button-green"",
            icon: @<KeyboardArrowUpIcon />,
            label: ""Expand""
        )
    };
}
```
")" />